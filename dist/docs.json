{
  "api": {
    "name": "NrfMeshPlugin",
    "slug": "nrfmeshplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "checkPermissions",
        "signature": "() => Promise<Permissions>",
        "parameters": [],
        "returns": "Promise<Permissions>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "Permissions"
        ],
        "slug": "checkpermissions"
      },
      {
        "name": "requestPermissions",
        "signature": "() => Promise<Permissions>",
        "parameters": [],
        "returns": "Promise<Permissions>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "Permissions"
        ],
        "slug": "requestpermissions"
      },
      {
        "name": "isBluetoothEnabled",
        "signature": "() => Promise<BluetoothState>",
        "parameters": [],
        "returns": "Promise<BluetoothState>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothState"
        ],
        "slug": "isbluetoothenabled"
      },
      {
        "name": "requestBluetoothEnable",
        "signature": "() => Promise<BluetoothState>",
        "parameters": [],
        "returns": "Promise<BluetoothState>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothState"
        ],
        "slug": "requestbluetoothenable"
      },
      {
        "name": "initMeshNetwork",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "initmeshnetwork"
      },
      {
        "name": "getMeshNetwork",
        "signature": "() => Promise<MeshNetwork>",
        "parameters": [],
        "returns": "Promise<MeshNetwork>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "MeshNetwork"
        ],
        "slug": "getmeshnetwork"
      },
      {
        "name": "scanMeshDevices",
        "signature": "(options: { timeout: number; }) => Promise<ScanMeshDevices>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ timeout: number; }"
          }
        ],
        "returns": "Promise<ScanMeshDevices>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "ScanMeshDevices"
        ],
        "slug": "scanmeshdevices"
      },
      {
        "name": "getProvisioningCapabilities",
        "signature": "(options: { macAddress: string; uuid: string; }) => Promise<ProvisioningCapabilities>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ macAddress: string; uuid: string; }"
          }
        ],
        "returns": "Promise<ProvisioningCapabilities>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "ProvisioningCapabilities"
        ],
        "slug": "getprovisioningcapabilities"
      },
      {
        "name": "provisionDevice",
        "signature": "(options: { macAddress: string; uuid: string; }) => Promise<ProvisioningStatus>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ macAddress: string; uuid: string; }"
          }
        ],
        "returns": "Promise<ProvisioningStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "ProvisioningStatus"
        ],
        "slug": "provisiondevice"
      },
      {
        "name": "unprovisionDevice",
        "signature": "(options: { unicastAddress: number; }) => Promise<NodeResetStatus>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ unicastAddress: number; }"
          }
        ],
        "returns": "Promise<NodeResetStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "NodeResetStatus"
        ],
        "slug": "unprovisiondevice"
      },
      {
        "name": "getCompositionData",
        "signature": "(options: { unicastAddress: number; }) => Promise<CompositionDataStatus>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ unicastAddress: number; }"
          }
        ],
        "returns": "Promise<CompositionDataStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "CompositionDataStatus"
        ],
        "slug": "getcompositiondata"
      },
      {
        "name": "getDefaultTTL",
        "signature": "(options: { unicastAddress: number; }) => Promise<DefaultTTLStatus>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ unicastAddress: number; }"
          }
        ],
        "returns": "Promise<DefaultTTLStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DefaultTTLStatus"
        ],
        "slug": "getdefaultttl"
      },
      {
        "name": "setDefaultTTL",
        "signature": "(options: { unicastAddress: number; ttl: number; }) => Promise<DefaultTTLStatus>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ unicastAddress: number; ttl: number; }"
          }
        ],
        "returns": "Promise<DefaultTTLStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DefaultTTLStatus"
        ],
        "slug": "setdefaultttl"
      },
      {
        "name": "getNetworkTransmit",
        "signature": "(options: { unicastAddress: number; }) => Promise<NetworkTransmitStatus>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ unicastAddress: number; }"
          }
        ],
        "returns": "Promise<NetworkTransmitStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "NetworkTransmitStatus"
        ],
        "slug": "getnetworktransmit"
      },
      {
        "name": "setNetworkTransmit",
        "signature": "(options: { unicastAddress: number; networkTransmitCount: number; networkTransmitIntervalSteps: number; }) => Promise<NetworkTransmitStatus>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ unicastAddress: number; networkTransmitCount: number; networkTransmitIntervalSteps: number; }"
          }
        ],
        "returns": "Promise<NetworkTransmitStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "NetworkTransmitStatus"
        ],
        "slug": "setnetworktransmit"
      },
      {
        "name": "addListener",
        "signature": "(eventName: string, listenerFunc: (event: any) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "string"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(event: any) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerstring-"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "Permissions",
      "slug": "permissions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": []
    },
    {
      "name": "BluetoothState",
      "slug": "bluetoothstate",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "enabled",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "MeshNetwork",
      "slug": "meshnetwork",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "provisioners",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "[{ name: string; ttl: number; unicastAddress?: number | undefined; unicast: [{ lowerAddress: number; highAddress: number; lowerBound: number; upperBound: number; }]; group: [{ lowerAddress: number; highAddress: number; lowerBound: number; upperBound: number; }]; scene: [{ firstScene: number; lastScene: number; lowerBound: number; upperBound: number; }]; }]"
        },
        {
          "name": "netKeys",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "[{ name: string; key: string; oldKey?: string | undefined; index: number; phase: number; security: 'secure' | 'insecure'; lastModified: string; }]"
        }
      ]
    },
    {
      "name": "ScanMeshDevices",
      "slug": "scanmeshdevices",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "unprovisioned",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "UnprovisionedDevice"
          ],
          "type": "UnprovisionedDevice[]"
        },
        {
          "name": "provisioned",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "ProvisionedDevice"
          ],
          "type": "ProvisionedDevice[]"
        },
        {
          "name": "proxy",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "ProxyDevice"
          ],
          "type": "ProxyDevice[]"
        }
      ]
    },
    {
      "name": "UnprovisionedDevice",
      "slug": "unprovisioneddevice",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "uuid",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "name",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "rssi",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "macAddress",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "ProvisionedDevice",
      "slug": "provisioneddevice",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "provisionedTime",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "unicastAddress",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "security",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "deviceKey",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "companyIdentifier",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "productIdentifier",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "productVersion",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "replayProtectionCount",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "nodeFeaturesSupported",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ relay: boolean; proxy: boolean; friend: boolean; lowPower: boolean; } | undefined"
        },
        {
          "name": "nodeFeatures",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ relay: boolean; proxy: boolean; friend: boolean; lowPower: boolean; } | undefined"
        }
      ]
    },
    {
      "name": "ProxyDevice",
      "slug": "proxydevice",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "rssi",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "macAddress",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "ProvisioningCapabilities",
      "slug": "provisioningcapabilities",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "numberOfElements",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "availableOOBTypes",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string[]"
        },
        {
          "name": "algorithms",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "publicKeyType",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "staticOobTypes",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "outputOobSize",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "outputOobActions",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "inputOobSize",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "inputOobActions",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        }
      ]
    },
    {
      "name": "ProvisioningStatus",
      "slug": "provisioningstatus",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "provisioningComplete",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "uuid",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "unicastAddress",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        }
      ]
    },
    {
      "name": "NodeResetStatus",
      "slug": "noderesetstatus",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "data",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ status: number; statusName: string; }"
        }
      ]
    },
    {
      "name": "CompositionDataStatus",
      "slug": "compositiondatastatus",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "data",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ status: number; statusName: string; companyIdentifier: string; productIdentifier: string; productVersion: string; nodeFeaturesSupported: { relay: boolean; proxy: boolean; friend: boolean; lowPower: boolean; }; elements: [{ name: string; elementAddress: number; sigModelCount: number; vendorModelCount: number; locationDescriptor: number; models: [{ modelId: number; modelName: string; boundAppKeyIndexes: []; }]; }]; }"
        }
      ]
    },
    {
      "name": "DefaultTTLStatus",
      "slug": "defaultttlstatus",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "data",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ status: number; statusName: string; ttl: number; }"
        }
      ]
    },
    {
      "name": "NetworkTransmitStatus",
      "slug": "networktransmitstatus",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "data",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ status: number; statusName: string; networkTransmitCount: number; networkTransmitIntervalSteps: number; }"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}